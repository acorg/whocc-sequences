#! /usr/bin/env python3
# -*- Python -*-

"""Utility to make regex from the set of strings (aa sequence) to match al of them."""

import sys, os, traceback
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
sys.path[:0] = [os.path.dirname(os.path.dirname(os.path.realpath(sys.argv[0])))]
import logging; module_logger = logging.getLogger(__name__)

# ----------------------------------------------------------------------

def main(args):
    r = ""
    length = min(len(s) for s in args.input)
    for pos in range(length):
        lett = "".join(sorted(set(s[pos] for s in args.input)))
        if len(lett) == 1:
            r += lett
        else:
            r += "[{}]".format(lett)
    print(r)

# ----------------------------------------------------------------------

try:
    import argparse
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('input', nargs="+", help='Source aa sequence strings.')
    parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')
    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
