#! /usr/bin/env python3
# -*- Python -*-

"""
Print names stored in seqdb
"""

import sys, os, re, traceback, pprint
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
sys.path[:0] = [os.path.dirname(os.path.dirname(os.path.realpath(sys.argv[0])))]
import logging; module_logger = logging.getLogger(__name__)

from whoccseq import seqdb
from whoccseq import fasta as fasta_m, open_file

# ----------------------------------------------------------------------

def main(args):
    db = seqdb.SeqDB(os.path.expandvars(os.path.expanduser(args.path_to_db)))
    data = db.all()
    if args.lab:
        data = db.select_by("lab", args.lab.upper(), data)
    if args.virus_type:
        data = db.select_by("virus_type", fix_virus_type(args.virus_type), data)
    data = db.select_by("gene", args.gene.upper(), data)
    print("Names:", len(data))
    print("\n".join(sorted(data)))

# ----------------------------------------------------------------------

try:
    import argparse
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')
    parser.add_argument('--db', action='store', dest='path_to_db', default='~/GH/whocc-sequences/seqdb/seqdb.json.xz', help='Path to sequence database.')
    parser.add_argument('--lab', action='store', dest='lab', default=None, help='Export just for this lab.')
    parser.add_argument('--flu', action='store', dest='virus_type', default=None, help='Export just for this virus type/subtype: B, H1, H3, A(H1N1), A(H3N2).')
    parser.add_argument('--gene', action='store', dest='gene', default="HA", help='HA or NA.')
    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
