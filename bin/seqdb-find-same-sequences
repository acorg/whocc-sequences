#! /usr/bin/env python3
# -*- Python -*-

"""
Reports names for the same sequences in the seqdb
"""

import sys, os, re, traceback
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
sys.path[:0] = [os.path.dirname(os.path.dirname(os.path.realpath(sys.argv[0])))]
import logging; module_logger = logging.getLogger(__name__)

from whoccseq import seqdb
from whoccseq import fasta as fasta_m, open_file

# ----------------------------------------------------------------------

def main(args):
    db = seqdb.SeqDB(os.path.expandvars(os.path.expanduser(args.path_to_db)))
    seq_to_names = {}
    for e in db.iterate_sequences():
        s = e["seq"]["nuc"] if args.nucs else e["seq"]["aa"]
        name = e["seq"].get("hi_name") or "{} {}".format(e["name"], e["seq"]["passages"][0] if e["seq"].get("passages") else "")
        seq_to_names.setdefault(s, []).append(name)
    for e2 in seq_to_names.values():
        if len(e2) > 1:
            print("={}".format(len(e2)), "\n".join(e2), sep="\n", end="\n\n")

# ----------------------------------------------------------------------

try:
    import argparse
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--nuc', action="store_true", default=False, dest="nucs", help='Compare nucleotides.')
    parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')
    parser.add_argument('--db', action='store', dest='path_to_db', default='~/GH/whocc-sequences/seqdb/seqdb.json.xz', help='Path to sequence database.')
    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
